# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

AWSTemplateFormatVersion: 2010-09-09

Description: (SO0085k) - The Multi Region Key Value Store Layer uses a CloudFormation custom resource to create a DynamoDB global table in primary and secondary regions. (Version SOLUTION_VERSION).

Parameters:

  SecondaryRegion:
    Type: String
    Description: The Secondary Region where the DynamoDB Global Table is deployed to.

Mappings:

  SourceCode:
    General:
      S3Bucket: CODE_BUCKET
      KeyPrefix: SOLUTION_NAME/SOLUTION_VERSION

Resources:

  CustomResourceLambda:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt CustomResourceRole.Arn
      Code:
        S3Bucket: !Join ["-", [!FindInMap ["SourceCode", "General", "S3Bucket"], Ref: "AWS::Region"]]
        S3Key: !Join ["/", [!FindInMap ["SourceCode", "General", "KeyPrefix"],  "key-value-store-layer-custom-resource.zip"]]
      Runtime:  nodejs10.x
      Timeout: 300

  CustomResourceRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: >- 
              logs:CreateLogGroup/CreateLogStream/PutLogEvents - requires trailing * on resource to avoid creating a circular dependency between resources
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-CustomResourceRole
          PolicyDocument:
            Statement:
              # Allows the Custom Resource to write logs to CloudWatch
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/*
              
              # Allows the Custom Resource to create and configure a DynamoDB Global across in two regions
              - Effect: Allow
                Action:
                  - dynamodb:CreateGlobalTable
                Resource:
                  - !Sub arn:aws:dynamodb::${AWS::AccountId}:global-table/${AWS::StackName}-comments-table
              - Effect: Allow
                Action:
                  - dynamodb:CreateTable
                  - dynamodb:CreateGlobalTable
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-comments-table
                  - !Sub arn:aws:dynamodb:${SecondaryRegion}:${AWS::AccountId}:table/${AWS::StackName}-comments-table
              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                  - dynamodb:DescribeLimits
                Resource:
                  - '*'
              
  CreateDynamoDBGlobalTable:
    Type: Custom::CreateDynamoDBGlobalTable
    Properties:
      ServiceToken: !GetAtt CustomResourceLambda.Arn
      Resource: CreateDynamoDBGlobalTable
      TableName: !Sub ${AWS::StackName}-comments-table
      PrimaryRegion: !Ref AWS::Region
      SecondaryRegion: !Ref SecondaryRegion

Outputs:
  PrimaryCommentsTable:
    Value: !GetAtt CreateDynamoDBGlobalTable.PrimaryCommentsTable
  SecondaryCommentsTable:
    Value: !GetAtt CreateDynamoDBGlobalTable.SecondaryCommentsTable
  

  

  

  
    
  


