# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

AWSTemplateFormatVersion: 2010-09-09

Description: (SO0085) - The Multi Region Application Architecture deploys a N-Tier Application in active/passive mode across two AWS regions. (Version SOLUTION_VERSION).

Parameters:

  AdminName:
    Type: String
    Description: User name for the admin cognito user account that will be created when this solution is provisioned
    MinLength: 4 
    MaxLength: 20 
    AllowedPattern: '[a-zA-Z0-9-]+'
    ConstraintDescription: "AdminName must be a minimum of 4 characters and cannot include spaces"

  AdminEmail:
    Type: String
    Description: Email address for the admin cognito user account that will be created when this solution is provisioned
    MinLength: 5 
    AllowedPattern: '^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\.[a-zA-Z0-9-.]+$' 
    ConstraintDescription: "AdminEmail must be a valid email address"

  AdminPhoneNumber:
    Type: String
    Description: Phone Number for the admin cognito user account that will be created when this solution is provisioned specified in the format +12345678999
    MinLength: 12 
    MaxLength: 12 

  SecondaryRegion:
    Type: String
    Description: Secondary Region to deploy the Multi Region Application Architecture

  CustomResourceExecutionRoleArn:
    Type: String
    Description: The ARN of the IAM Role used to allow The Lambda Custom Resource to create/delete cloudformation stack. 

Mappings:
  SourceCode:
    General:
      S3Bucket: CODE_BUCKET
      KeyPrefix: SOLUTION_NAME/SOLUTION_VERSION

Resources:

  # Presentation Layer
  PresentationLayer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://s3.amazonaws.com/${S3Bucket}-${AWS::Region}/${KeyPrefix}/multi-region-application-architecture-web-app-layer.template"
        - S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
          KeyPrefix: !FindInMap ["SourceCode", "General", "KeyPrefix"]
      Parameters:
        CustomResourceExecutionRoleArn: !Ref CustomResourceExecutionRoleArn
        SecondaryRegion: !Ref SecondaryRegion

        PrimaryUserPoolId: !GetAtt IdentityLayer.Outputs.PrimaryUserPoolId
        PrimaryUserPoolClientId: !GetAtt IdentityLayer.Outputs.PrimaryUserPoolClientId
        PrimaryPhotosBucket: !GetAtt ObjectStoreLayer.Outputs.PrimaryBucket
        PrimaryPhotosApi: !GetAtt ApplicationLayer.Outputs.PrimaryCommentsApi
          
        SecondaryUserPoolId: !GetAtt IdentityLayer.Outputs.SecondaryUserPoolId
        SecondaryUserPoolClientId: !GetAtt IdentityLayer.Outputs.SecondaryUserPoolClientId
        SecondaryPhotosBucket: !GetAtt ObjectStoreLayer.Outputs.SecondaryBucket
        SecondaryPhotosApi: !GetAtt ApplicationLayer.Outputs.SecondaryCommentsApi

  # Application layer
  ApplicationLayer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://s3.amazonaws.com/${S3Bucket}-${AWS::Region}/${KeyPrefix}/multi-region-application-architecture-serverless-app-layer.template"
        - S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
          KeyPrefix: !FindInMap ["SourceCode", "General", "KeyPrefix"]
      Parameters:
        CustomResourceExecutionRoleArn: !Ref CustomResourceExecutionRoleArn
        SecondaryRegion: !Ref SecondaryRegion
        PrimaryCommentsTable: !GetAtt KeyValueStoreLayer.Outputs.PrimaryCommentsTable
        PrimaryUserPoolId: !GetAtt IdentityLayer.Outputs.PrimaryUserPoolId
        SecondaryCommentsTable: !GetAtt KeyValueStoreLayer.Outputs.SecondaryCommentsTable
        SecondaryUserPoolId: !GetAtt IdentityLayer.Outputs.SecondaryUserPoolId

  # Key Value Store Layer
  KeyValueStoreLayer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://s3.amazonaws.com/${S3Bucket}-${AWS::Region}/${KeyPrefix}/multi-region-application-architecture-key-value-store-layer.template"
        - S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
          KeyPrefix: !FindInMap ["SourceCode", "General", "KeyPrefix"]
      Parameters:
        SecondaryRegion: !Ref SecondaryRegion

  # Object Store Layer
  ObjectStoreLayer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://s3.amazonaws.com/${S3Bucket}-${AWS::Region}/${KeyPrefix}/multi-region-application-architecture-object-store-layer.template"
        - S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
          KeyPrefix: !FindInMap ["SourceCode", "General", "KeyPrefix"]
      Parameters:
        SecondaryRegion: !Ref SecondaryRegion

  # Identity Layer
  IdentityLayer:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub
        - "https://s3.amazonaws.com/${S3Bucket}-${AWS::Region}/multi-region-identity-layer/v1.0/multi-region-identity-layer.template"
        - S3Bucket: !FindInMap ["SourceCode", "General", "S3Bucket"]
      Parameters:
        AdminName: !Ref AdminName
        AdminEmail: !Ref AdminEmail
        AdminPhoneNumber: !Ref AdminPhoneNumber
        SecondaryRegion: !Ref SecondaryRegion